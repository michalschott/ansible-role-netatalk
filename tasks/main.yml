---
- include: prereqs_ubuntu_14.04.yml
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "14.04"

- include: prereqs_ubuntu_16.04.yml
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "16.04"

- include: prereqs_ubuntu_18.04.yml
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04"

- name: NETATALK | download source code
  get_url:
    url: "{{ netatalk_url }}"
    dest: "/usr/src/netatalk-{{ netatalk_version }}.tar.gz"

- name: NETATALK | unpack source code
  unarchive:
    src: "/usr/src/netatalk-{{ netatalk_version }}.tar.gz"
    dest: /usr/src
    remote_src: yes

- name: NETATALK | build - configure
  shell: cd /usr/src/netatalk-{{ netatalk_version }} && ./configure --with-init-style=debian-sysv --without-libevent --without-tdb --with-cracklib --enable-krbV-uam --with-pam-confdir=/etc/pam.d --with-dbus-sysconf-dir=/etc/dbus-1/system.d --with-tracker-pkgconfig-version=0.16

- name: NETATALK | build - make
  shell: cd /usr/src/netatalk-{{ netatalk_version }} && make

- name: NETATALK | install
  shell: cd /usr/src/netatalk-{{ netatalk_version }} && checkinstall --pkgname=netatalk --default

- name: NETATALK | make sure timemachine folder exist
  file:
    path: "{{ netatalk_timemachine_path }}"
    state: directory
    mode: 0755

- name: NETATALK | ensure /usr/local/etc/ exists
  file:
    state: directory
    path: /usr/local/etc/
    owner: root
    group: root
    mode: 0644

- name: NETATALK | configure
  template:
    src: afp.conf.j2
    dest: /usr/local/etc/afp.conf
    mode: 0644
  notify:
    - restart netatalk

- name: NETATALK | enable netatalk on boot
  service:
    name: netatalk
    enabled: yes
